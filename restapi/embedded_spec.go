// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "description": "This is a sample api",
    "title": "Sample REST API",
    "license": {
      "name": "MIT",
      "url": "httpshttps://github.com/sakata1222/go-rest-api-sample/blob/master/LICENSE"
    },
    "version": "1.0.0"
  },
  "paths": {
    "/user/{userId}": {
      "get": {
        "description": "return the specified",
        "summary": "get a user",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "the id of a user",
            "name": "userId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int64"
                },
                "name": {
                  "type": "string",
                  "example": "name"
                }
              }
            }
          }
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "description": "This is a sample api",
    "title": "Sample REST API",
    "license": {
      "name": "MIT",
      "url": "httpshttps://github.com/sakata1222/go-rest-api-sample/blob/master/LICENSE"
    },
    "version": "1.0.0"
  },
  "paths": {
    "/user/{userId}": {
      "get": {
        "description": "return the specified",
        "summary": "get a user",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "the id of a user",
            "name": "userId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int64"
                },
                "name": {
                  "type": "string",
                  "example": "name"
                }
              }
            }
          }
        }
      }
    }
  }
}`))
}
